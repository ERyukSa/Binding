Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreResult.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail.models\r\n\r\nimport com.example.binding.config.BaseResponse\r\nimport com.google.gson.annotations.SerializedName\r\n\r\ndata class BookStoreResult (\r\n    @SerializedName(\"images\") val images: ArrayList<BookStoreImages>,\r\n    @SerializedName(\"bookStoreInfo\") val bookStoreInfo: ArrayList<BookStoreInfo>\r\n)
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreResult.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/models/NewestResult.kt	(date 1615978632049)
@@ -1,9 +1,11 @@
 package com.example.binding.src.main.menu.store_detail.models
 
-import com.example.binding.config.BaseResponse
 import com.google.gson.annotations.SerializedName
 
-data class BookStoreResult (
-    @SerializedName("images") val images: ArrayList<BookStoreImages>,
-    @SerializedName("bookStoreInfo") val bookStoreInfo: ArrayList<BookStoreInfo>
+data class NewestResult (
+    @SerializedName("bookIdx") val bookIdx: Int,
+    @SerializedName("bookImgUrl") val bookImgUrl: String,
+    @SerializedName("bookName") val bookName: String,
+    @SerializedName("authorName") val authorName: String,
+    @SerializedName("contentsCount") val contentsCount: String
 )
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/models/GetBookStoreResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail.models\r\n\r\nimport com.example.binding.config.BaseResponse\r\nimport com.example.binding.src.main.menu.models.StoresResult\r\nimport com.google.gson.annotations.SerializedName\r\n\r\ndata class GetBookStoreResponse (\r\n    @SerializedName(\"result\") val result: BookStoreResult\r\n): BaseResponse()
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/models/GetBookStoreResponse.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/models/GetNewestResponse.kt	(date 1615978339378)
@@ -1,9 +1,8 @@
 package com.example.binding.src.main.menu.store_detail.models
 
 import com.example.binding.config.BaseResponse
-import com.example.binding.src.main.menu.models.StoresResult
 import com.google.gson.annotations.SerializedName
 
-data class GetBookStoreResponse (
-    @SerializedName("result") val result: BookStoreResult
+data class GetNewestResponse (
+    @SerializedName("result") val result: ArrayList<NewestResult>
 ): BaseResponse()
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main\r\n\r\nimport android.os.Bundle\r\nimport com.example.binding.R\r\nimport com.example.binding.config.BaseActivity\r\nimport com.example.binding.databinding.ActivityMainBinding\r\nimport com.example.binding.src.main.home.HomeFragment\r\nimport com.example.binding.src.main.menu.MenuFragment\r\nimport com.example.binding.src.main.my_page.MyPageFragment\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\n\r\nclass MainActivity : BaseActivity<ActivityMainBinding>(ActivityMainBinding::inflate) {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // 처음 화면이 켜졌을 때 활성화될 하단 버튼 - 실제 화면이 아닌 버튼에만 적용\r\n        binding.mainBtmNav.selectedItemId = R.id.menu_main_btm_nav_menu\r\n\r\n        // 메뉴 프래그먼트로 진입\r\n        supportFragmentManager.beginTransaction()\r\n            .add(R.id.main_frm, MenuFragment())\r\n            .commitAllowingStateLoss()\r\n\r\n        // 아이콘 틴트는 셀렉터로 적용\r\n        binding.mainBtmNav.itemIconTintList = null\r\n\r\n        // 탭을 선택했을 때 프래그먼트 화면 전환\r\n        binding.mainBtmNav.setOnNavigationItemSelectedListener(\r\n            BottomNavigationView.OnNavigationItemSelectedListener { item ->\r\n                when (item.itemId) {\r\n                    R.id.menu_main_btm_nav_home -> {\r\n                        supportFragmentManager.beginTransaction()\r\n                            .replace(R.id.main_frm, HomeFragment())\r\n                            .commitAllowingStateLoss()\r\n                        return@OnNavigationItemSelectedListener true\r\n                    }\r\n                    R.id.menu_main_btm_nav_menu -> {\r\n                        supportFragmentManager.beginTransaction()\r\n                            .replace(R.id.main_frm, MenuFragment())\r\n                            .commitAllowingStateLoss()\r\n                        return@OnNavigationItemSelectedListener true\r\n                    }\r\n                    R.id.menu_main_btm_nav_my_page -> {\r\n                        supportFragmentManager.beginTransaction()\r\n                            .replace(R.id.main_frm, MyPageFragment())\r\n                            .commitAllowingStateLoss()\r\n                    }\r\n                }\r\n                false\r\n            })\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/MainActivity.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/MainActivity.kt	(date 1615975161860)
@@ -18,7 +18,7 @@
 
         // 메뉴 프래그먼트로 진입
         supportFragmentManager.beginTransaction()
-            .add(R.id.main_frm, MenuFragment())
+            .add(R.id.main_frm, HomeFragment())
             .commitAllowingStateLoss()
 
         // 아이콘 틴트는 셀렉터로 적용
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorPrimary\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/home_top_bar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"49dp\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:layout_marginRight=\"20dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/home_sort_recent\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:fontFamily=\"@font/notosanskrbold\"\r\n            android:text=\"최신글\"\r\n            android:textColor=\"@color/colorPrimaryDark\"\r\n            android:textSize=\"15dp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/home_sort_popular\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:fontFamily=\"@font/notosanskrbold\"\r\n            android:text=\"인기글\"\r\n            android:textColor=\"@color/colorPrimaryDark\"\r\n            android:textSize=\"15dp\"\r\n            android:visibility=\"invisible\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/home_sort_down\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_marginLeft=\"5dp\"\r\n            android:layout_toRightOf=\"@id/home_sort_recent\"\r\n            android:src=\"@drawable/down\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/home_search\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:src=\"@drawable/search\" />\r\n    </RelativeLayout>\r\n\r\n    <View\r\n        android:id=\"@+id/home_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"1dp\"\r\n        android:layout_below=\"@id/home_top_bar\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:background=\"#dadada\" />\r\n\r\n    <!--정렬 탭입니다. down 화살표 누르면 보여지고, 하나 선택하면 사라지도록 visibility 설정해주세요. -->\r\n    <LinearLayout\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/home_sort_tab\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"108dp\"\r\n        android:layout_below=\"@id/home_view\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:orientation=\"vertical\"\r\n        android:elevation=\"20dp\"\r\n        android:weightSum=\"2\">\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\"\r\n            android:fontFamily=\"@font/notosanskrbold\"\r\n            android:gravity=\"center\"\r\n            android:text=\"최신글\"\r\n            android:textColor=\"@color/colorPrimaryDark\"\r\n            android:textSize=\"15dp\" />\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_below=\"@id/home_top_bar\"\r\n            android:layout_marginLeft=\"11dp\"\r\n            android:layout_marginRight=\"11dp\"\r\n            android:background=\"#dadada\" />\r\n\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_weight=\"1\"\r\n            android:fontFamily=\"@font/notosanskrbold\"\r\n            android:gravity=\"center\"\r\n            android:text=\"인기글\"\r\n            android:textColor=\"@color/colorPrimaryDark\"\r\n            android:textSize=\"15dp\" />\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_below=\"@id/home_top_bar\"\r\n            android:background=\"#dadada\" />\r\n    </LinearLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/home_recycler\"\r\n        android:layout_below=\"@id/home_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:listitem=\"@layout/item_book\"/>\r\n\r\n    <ImageView\r\n        android:layout_width=\"60dp\"\r\n        android:layout_height=\"60dp\"\r\n        android:src=\"@drawable/red_btn\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginRight=\"20dp\"\r\n        android:layout_marginBottom=\"20dp\"/>\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/res/layout/fragment_home.xml	(date 1615976616294)
@@ -12,35 +12,31 @@
         android:layout_marginLeft="20dp"
         android:layout_marginRight="20dp">
 
-        <TextView
-            android:id="@+id/home_sort_recent"
+        <RelativeLayout
+            android:id="@+id/home_sort_btn"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_centerVertical="true"
-            android:fontFamily="@font/notosanskrbold"
-            android:text="최신글"
-            android:textColor="@color/colorPrimaryDark"
-            android:textSize="15dp" />
+            android:layout_centerVertical="true">
 
-        <TextView
-            android:id="@+id/home_sort_popular"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerVertical="true"
-            android:fontFamily="@font/notosanskrbold"
-            android:text="인기글"
-            android:textColor="@color/colorPrimaryDark"
-            android:textSize="15dp"
-            android:visibility="invisible" />
+            <TextView
+                android:id="@+id/home_sort_txt"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_centerVertical="true"
+                android:fontFamily="@font/notosanskrbold"
+                android:text="최신글"
+                android:textColor="@color/colorPrimaryDark"
+                android:textSize="15dp" />
 
-        <ImageView
-            android:id="@+id/home_sort_down"
-            android:layout_width="25dp"
-            android:layout_height="25dp"
-            android:layout_centerVertical="true"
-            android:layout_marginLeft="5dp"
-            android:layout_toRightOf="@id/home_sort_recent"
-            android:src="@drawable/down" />
+            <ImageView
+                android:id="@+id/home_sort_down"
+                android:layout_width="25dp"
+                android:layout_height="25dp"
+                android:layout_centerVertical="true"
+                android:layout_marginLeft="5dp"
+                android:layout_toRightOf="@id/home_sort_txt"
+                android:src="@drawable/down" />
+        </RelativeLayout>
 
         <ImageView
             android:id="@+id/home_search"
Index: app/src/main/java/com/example/binding/src/main/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.home\r\n\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport com.example.binding.R\r\nimport com.example.binding.config.BaseFragment\r\nimport com.example.binding.databinding.FragmentHomeBinding\r\nimport com.example.binding.databinding.FragmentJoin2Binding\r\n\r\nclass HomeFragment: BaseFragment<FragmentHomeBinding>(\r\n    FragmentHomeBinding::bind,\r\n    R.layout.fragment_home\r\n){\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/home/HomeFragment.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/home/HomeFragment.kt	(date 1615977854408)
@@ -1,5 +1,6 @@
 package com.example.binding.src.main.home
 
+import android.annotation.SuppressLint
 import android.os.Bundle
 import android.view.View
 import com.example.binding.R
@@ -11,8 +12,33 @@
     FragmentHomeBinding::bind,
     R.layout.fragment_home
 ){
+    @SuppressLint("ClickableViewAccessibility")
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
+        // 글 카테고리 선택 버튼 클릭
+        binding.homeSortBtn.setOnClickListener(onClickTab)
+
+        // 카테고리 선택 창이 열려있을 때 RecyclerView를 터치하면 item이 터치되지 않고,
+        // 선택 창이 닫힌다.
+        binding.homeRecycler.setOnTouchListener(onTouchRecyclerView)
+    }
+
+    // 글 카테고리 선택 버튼 클릭 리스너
+    private val onClickTab = View.OnClickListener {
+        val homeSortTab = binding.homeSortTab
+        when(homeSortTab.visibility){
+            View.VISIBLE -> homeSortTab.visibility = View.GONE
+            else -> homeSortTab.visibility = View.VISIBLE
+        }
+    }
+
+    // 리사이클러뷰 터치 리스너
+    private val onTouchRecyclerView = View.OnTouchListener { v, event ->
+        if(binding.homeSortTab.visibility == View.VISIBLE){
+            binding.homeSortTab.visibility = View.GONE
+            true
+        }
+        v.performClick()
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail\r\n\r\nimport com.example.binding.config.BaseResponse\r\nimport com.example.binding.src.join.join3.models.PostJoinBody\r\nimport com.example.binding.src.main.menu.models.GetStoresResponse\r\nimport com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse\r\nimport retrofit2.Call\r\nimport retrofit2.http.*\r\n\r\ninterface StoreDetailRetrofitInterface {\r\n\r\n    // 클릭한 서점 상세조회 api\r\n    @GET(\"/bookstores/{bookstoreIdx}\")\r\n    fun getBookStore(@Path(\"bookstoreIdx\") bookstoreIdx: Int): Call<GetBookStoreResponse>\r\n\r\n    // 북마크 수정 api\r\n    @PATCH(\"/bookmark/bookstores/{bookstoreIdx}\")\r\n    fun patchBookmark(@Path(\"bookstoreIdx\") bookstoreIdx: Int): Call<BaseResponse>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailRetrofitInterface.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailRetrofitInterface.kt	(date 1615978164333)
@@ -1,19 +1,19 @@
 package com.example.binding.src.main.menu.store_detail
 
-import com.example.binding.config.BaseResponse
-import com.example.binding.src.join.join3.models.PostJoinBody
-import com.example.binding.src.main.menu.models.GetStoresResponse
-import com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse
+import com.example.binding.src.main.menu.store_detail.models.GetNewestResponse
+import com.example.binding.src.main.menu.store_detail.models.GetPopularResponse
 import retrofit2.Call
 import retrofit2.http.*
 
 interface StoreDetailRetrofitInterface {
 
     // 클릭한 서점 상세조회 api
-    @GET("/bookstores/{bookstoreIdx}")
-    fun getBookStore(@Path("bookstoreIdx") bookstoreIdx: Int): Call<GetBookStoreResponse>
+    @GET("/books/newest-books")
+    fun getNewestBooks(@Query("page") page: Int,
+                       @Query("limit") limit: Int): Call<GetNewestResponse>
 
     // 북마크 수정 api
-    @PATCH("/bookmark/bookstores/{bookstoreIdx}")
-    fun patchBookmark(@Path("bookstoreIdx") bookstoreIdx: Int): Call<BaseResponse>
+    @PATCH("/books/popularity-books")
+    fun getPopularBooks(@Query("page") page: Int,
+                        @Query("limit") limit: Int): Call<GetPopularResponse>
 }
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail\r\n\r\nimport com.example.binding.config.ApplicationClass\r\nimport com.example.binding.config.BaseResponse\r\nimport com.example.binding.src.login.LoginActivityView\r\nimport com.example.binding.src.login.LoginRetrofitInterface\r\nimport com.example.binding.src.login.models.LoginResponse\r\nimport com.example.binding.src.login.models.PostLoginBody\r\nimport com.example.binding.src.main.menu.MenuFragmentView\r\nimport com.example.binding.src.main.menu.MenuRetrofitInterface\r\nimport com.example.binding.src.main.menu.models.GetStoresResponse\r\nimport com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\nclass StoreDetailService(val view: StoreDetailFragmentView) {\r\n\r\n    // 서점 상세조회 API 실행 (네트워크 통신)\r\n    fun tryGetBookStore(bookstoreIdx: Int){\r\n\r\n        val storeDetailRetrofitInterface = ApplicationClass.sRetrofit.create(\r\n            StoreDetailRetrofitInterface::class.java)\r\n\r\n        storeDetailRetrofitInterface.getBookStore(bookstoreIdx)\r\n            .enqueue(object : Callback<GetBookStoreResponse> {\r\n\r\n                override fun onResponse(call: Call<GetBookStoreResponse>,\r\n                                        response: Response<GetBookStoreResponse>\r\n                ) {\r\n                    view.onGetBookStoreSuccess(response.body() as GetBookStoreResponse)\r\n                }\r\n\r\n                override fun onFailure(call: Call<GetBookStoreResponse>, t: Throwable) {\r\n                    view.onGetBookStoreFailure(t.message ?: \"통신 오류\")\r\n                }\r\n            })\r\n    }\r\n\r\n    // 북마크 수정 API 실행 (네트워크 통신)\r\n    fun tryPatchBookmark(bookstoreIdx: Int){\r\n\r\n        val storeDetailRetrofitInterface = ApplicationClass.sRetrofit.create(\r\n            StoreDetailRetrofitInterface::class.java)\r\n\r\n        storeDetailRetrofitInterface.patchBookmark(bookstoreIdx)\r\n            .enqueue(object : Callback<BaseResponse> {\r\n\r\n                override fun onResponse(call: Call<BaseResponse>,\r\n                                        response: Response<BaseResponse>\r\n                ) {\r\n                    view.onPatchBookmarkSuccess(response.body() as BaseResponse)\r\n                }\r\n\r\n                override fun onFailure(call: Call<BaseResponse>, t: Throwable) {\r\n                    view.onPatchBookmarkFailure(t.message ?: \"통신 오류\")\r\n                }\r\n            })\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailService.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailService.kt	(date 1615978953243)
@@ -9,7 +9,7 @@
 import com.example.binding.src.main.menu.MenuFragmentView
 import com.example.binding.src.main.menu.MenuRetrofitInterface
 import com.example.binding.src.main.menu.models.GetStoresResponse
-import com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse
+import com.example.binding.src.main.menu.store_detail.models.GetNewestResponse
 import retrofit2.Call
 import retrofit2.Callback
 import retrofit2.Response
@@ -23,15 +23,15 @@
             StoreDetailRetrofitInterface::class.java)
 
         storeDetailRetrofitInterface.getBookStore(bookstoreIdx)
-            .enqueue(object : Callback<GetBookStoreResponse> {
+            .enqueue(object : Callback<GetNewestResponse> {
 
-                override fun onResponse(call: Call<GetBookStoreResponse>,
-                                        response: Response<GetBookStoreResponse>
+                override fun onResponse(call: Call<GetNewestResponse>,
+                                        response: Response<GetNewestResponse>
                 ) {
-                    view.onGetBookStoreSuccess(response.body() as GetBookStoreResponse)
+                    view.onGetBookStoreSuccess(response.body() as GetNewestResponse)
                 }
 
-                override fun onFailure(call: Call<GetBookStoreResponse>, t: Throwable) {
+                override fun onFailure(call: Call <GetNewestResponse>, t: Throwable) {
                     view.onGetBookStoreFailure(t.message ?: "통신 오류")
                 }
             })
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreInfo.kt
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreInfo.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreInfo.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
@@ -1,15 +0,0 @@
-package com.example.binding.src.main.menu.store_detail.models
-
-import com.example.binding.config.BaseResponse
-import com.example.binding.src.main.menu.models.StoresResult
-import com.google.gson.annotations.SerializedName
-
-data class BookStoreInfo (
-    @SerializedName("storeName") val storeName: String,     // 서점 이름
-    @SerializedName("isBookMark") val isBookMark: Int,      // 북마크 여부
-    @SerializedName("location") val location: String,       // 서점 주소
-    @SerializedName("storeTime") val storeTime: String,     // 서점 운영 시간
-    @SerializedName("siteAddress") val siteAddress: String, // 서점 웹주소
-    @SerializedName("phoneNumber") val phoneNumber: String, // 서점 전화번호
-    @SerializedName("storeInfo") val storeInfo: String      // 서점 설명
-)
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreImages.kt
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreImages.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/models/BookStoreImages.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
@@ -1,11 +0,0 @@
-package com.example.binding.src.main.menu.store_detail.models
-
-import com.example.binding.config.BaseResponse
-import com.example.binding.src.main.menu.models.StoresResult
-import com.google.gson.annotations.SerializedName
-
-data class BookStoreImages (
-    @SerializedName("imageIdx") val imageIdx: Int,      // 이미지 인덱스
-    @SerializedName("imageUrl") val imageUrl: String    // 이미지 url
-
-)
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/home/models/GetBooksResponse.kt
===================================================================
--- app/src/main/java/com/example/binding/src/main/home/models/GetBooksResponse.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/home/models/GetBooksResponse.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
@@ -1,13 +0,0 @@
-package com.example.binding.src.main.home.models
-
-import com.example.binding.config.BaseResponse
-import com.google.gson.annotations.SerializedName
-
-data class GetBooksResponse (
-    @SerializedName("viewCount") val viewCount: String,
-    @SerializedName("bookIdx") val bookIdx: String,
-    @SerializedName("bookImgUrl") val bookImgUrl: String,
-    @SerializedName("bookName") val bookName: String,
-    @SerializedName("authorName") val authorName: String,
-    @SerializedName("contentsCount") val contentsCount: String
-): BaseResponse()
\ No newline at end of file
Index: app/src/main/java/com/example/binding/src/main/menu/MenuRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.example.binding.R\r\nimport com.example.binding.src.main.home.HomeRecyclerViewAdapter\r\nimport com.example.binding.src.main.home.models.GetBooksResponse\r\nimport com.example.binding.src.main.menu.models.StoresResult\r\nimport com.example.binding.src.main.menu.store_detail.StoreDetailFragment\r\nimport com.example.binding.src.main.my_page.MyPageFragment\r\nimport com.makeramen.roundedimageview.RoundedImageView\r\nimport kotlinx.android.synthetic.main.item_menu.view.*\r\n\r\nclass MenuRecyclerViewAdapter(fragment: MenuFragment):\r\n    RecyclerView.Adapter<MenuRecyclerViewAdapter.StoreViewHolder>() {\r\n\r\n    private var storeList = arrayListOf<StoresResult>()\r\n    private val menuFragment = fragment\r\n\r\n    override fun onCreateViewHolder(\r\n        parent: ViewGroup,\r\n        viewType: Int\r\n    ): MenuRecyclerViewAdapter.StoreViewHolder {\r\n        val viewHolder = StoreViewHolder(\r\n            LayoutInflater.from(parent.context)\r\n                .inflate(R.layout.item_menu, parent, false)\r\n        )\r\n        return viewHolder\r\n    }\r\n\r\n\r\n    override fun getItemCount() = storeList.size\r\n\r\n    override fun onBindViewHolder(holder: MenuRecyclerViewAdapter.StoreViewHolder, position: Int) {\r\n        holder.bindValue(storeList[position])\r\n    }\r\n\r\n    inner class StoreViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        private val item: View = itemView\r\n        private val photo: RoundedImageView = itemView.item_menu_photo\r\n        private val title: TextView = itemView.item_menu_title\r\n        private val address: TextView = itemView.item_menu_address\r\n\r\n        fun bindValue(store: StoresResult){\r\n            Glide.with(menuFragment)\r\n                .load(store.storeImgUrl)\r\n                .error(R.drawable.jangu)\r\n                .into(photo)\r\n\r\n            title.text = store.storeName\r\n            address.text = store.location\r\n\r\n            item.setOnClickListener{\r\n                val fragmentManager = menuFragment.childFragmentManager\r\n                val storeDetailFragment = StoreDetailFragment()\r\n                val idxBundle = Bundle()\r\n                idxBundle.putInt(\"bookStoreIdx\", store.bookstoreIdx)\r\n                storeDetailFragment.arguments = idxBundle\r\n                fragmentManager.beginTransaction()\r\n                    .replace(R.id.menu_root, storeDetailFragment)\r\n                    .commitAllowingStateLoss()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fun updateList(newList: ArrayList<StoresResult>){\r\n        storeList = newList\r\n        this.notifyDataSetChanged()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/MenuRecyclerViewAdapter.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/MenuRecyclerViewAdapter.kt	(date 1615978918942)
@@ -1,8 +1,5 @@
 package com.example.binding.src.main.menu
 
-import android.content.Context
-import android.content.Intent
-import android.net.Uri
 import android.os.Bundle
 import android.view.LayoutInflater
 import android.view.View
@@ -11,11 +8,8 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.bumptech.glide.Glide
 import com.example.binding.R
-import com.example.binding.src.main.home.HomeRecyclerViewAdapter
-import com.example.binding.src.main.home.models.GetBooksResponse
 import com.example.binding.src.main.menu.models.StoresResult
 import com.example.binding.src.main.menu.store_detail.StoreDetailFragment
-import com.example.binding.src.main.my_page.MyPageFragment
 import com.makeramen.roundedimageview.RoundedImageView
 import kotlinx.android.synthetic.main.item_menu.view.*
 
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragmentView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail\r\n\r\nimport com.example.binding.config.BaseResponse\r\nimport com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse\r\n\r\ninterface StoreDetailFragmentView {\r\n\r\n    // 서점 상세 조회 API 콜백 함수\r\n    fun onGetBookStoreSuccess(response: GetBookStoreResponse)\r\n\r\n    fun onGetBookStoreFailure(message: String)\r\n\r\n    // 북마크 수정 API 콜백 함수\r\n    fun onPatchBookmarkSuccess(response: BaseResponse)\r\n\r\n    fun onPatchBookmarkFailure(message: String)\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragmentView.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragmentView.kt	(date 1615978164297)
@@ -1,12 +1,12 @@
 package com.example.binding.src.main.menu.store_detail
 
 import com.example.binding.config.BaseResponse
-import com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse
+import com.example.binding.src.main.menu.store_detail.models.GetNewestResponse
 
 interface StoreDetailFragmentView {
 
     // 서점 상세 조회 API 콜백 함수
-    fun onGetBookStoreSuccess(response: GetBookStoreResponse)
+    fun onGetBookStoreSuccess(response: GetNewestResponse)
 
     fun onGetBookStoreFailure(message: String)
 
Index: app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.menu.store_detail\r\n\r\nimport android.content.ActivityNotFoundException\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.PorterDuff\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport com.bumptech.glide.Glide\r\nimport com.example.binding.R\r\nimport com.example.binding.config.ApplicationClass\r\nimport com.example.binding.config.BaseResponse\r\nimport com.example.binding.databinding.FragmentStoreDetailBinding\r\nimport com.example.binding.src.main.menu.store_detail.models.BookStoreImages\r\nimport com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse\r\nimport com.example.binding.util.LoadingDialog\r\n\r\n\r\nclass StoreDetailFragment: Fragment(), StoreDetailFragmentView{\r\n    private var _binding: FragmentStoreDetailBinding? = null\r\n    private val binding get() = _binding!!\r\n    lateinit var mLoadingDialog: LoadingDialog\r\n\r\n    private val sp = ApplicationClass.sSharedPreferences\r\n    private var bookStoreIdx = 0    // 프래그먼트 이동할 때 받은, 클릭된 현 서점의 인덱스\r\n\r\n    private lateinit var imagesList: ArrayList<BookStoreImages> // 이미지들의 인덱스, URL이 담긴 리스트\r\n    private var isBookMarked = 0    // 1이면 마크, 0이면 노마크\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // 프래그먼트용 테마 적용\r\n        val contextThemeWrapper = ContextThemeWrapper(activity, R.style.StoreDetailTheme)\r\n        val mInflater = inflater.cloneInContext(contextThemeWrapper)\r\n        _binding = FragmentStoreDetailBinding.inflate(mInflater, container, false)\r\n        return binding.root\r\n    }\r\n\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        bookStoreIdx = arguments?.getInt(\"bookStoreIdx\", 0)!!\r\n\r\n        imagesList = ArrayList()\r\n\r\n        showLoadingDialog(context!!)\r\n        StoreDetailService(this).tryGetBookStore(bookStoreIdx)\r\n\r\n        // 북마크 ON\r\n        binding.storeDetailBookmarkEmpty.setOnClickListener {\r\n            showLoadingDialog(context!!)\r\n\r\n            // 북마크 수정 API 호출\r\n            StoreDetailService(this).tryPatchBookmark(bookStoreIdx)\r\n        }\r\n\r\n        // 북마크 해제\r\n        binding.storeDetailBookmarkFilled.setOnClickListener {\r\n            showLoadingDialog(context!!)\r\n\r\n            // 북마크 수정 API 호출\r\n            StoreDetailService(this).tryPatchBookmark(bookStoreIdx)\r\n        }\r\n\r\n        binding.storeDetailWebContainer.setOnClickListener(onClickWebAddress)\r\n    }\r\n\r\n    // 서점 인스타 홈페이지 띄우기 - web으로 띄우기\r\n    private val onClickWebAddress = View.OnClickListener {\r\n\r\n        //특정 페이지만 띄울때 사용\r\n        val instagramPageID = String.format(\"${binding.storeDetailWebAddress.text}/\")\r\n        var instagramPostID = \"\" //게시글을 까지 보여주고싶다면 이변수를 활용\r\n        // 만약 특정페이지 url이 있다면 게시글 url값을 초기화\r\n        if (instagramPageID != \"\") instagramPostID = \"\"\r\n\r\n        // val uri: Uri = Uri.parse(\"http://instagram.com/_u/$instagramPostID$instagramPageID\")\r\n        val uri: Uri = Uri.parse(\"$instagramPostID$instagramPageID\")\r\n        val instagramIntent = Intent(Intent.ACTION_VIEW, uri)\r\n\r\n        // instagramIntent.setPackage(\"com.instagram.android\")\r\n\r\n        try {\r\n            startActivity(instagramIntent)\r\n        } catch (e: ActivityNotFoundException) {\r\n            startActivity(instagramIntent)\r\n        }\r\n    }\r\n\r\n    override fun onGetBookStoreSuccess(response: GetBookStoreResponse) {\r\n        Log.d(\"로그\", \"onGetBookStoreSuccess() called, response: $response\")\r\n        dismissLoadingDialog()\r\n\r\n        when(response.code){\r\n            1000 -> {\r\n                Log.d(\r\n                    \"로그\", \"서점 상세 조회 성공, code: ${response.code} , \" +\r\n                            \"message: ${response.message}\"\r\n                )\r\n\r\n                val result = response.result\r\n\r\n                val bookStoreInfo = result.bookStoreInfo[0]\r\n                imagesList = result.images\r\n\r\n                // 첫 사진을 대표사진으로 설정\r\n                if(imagesList.size > 0){\r\n                    Glide.with(this)\r\n                        .load(imagesList[0].imageUrl)\r\n                        .placeholder(R.drawable.icon_app)\r\n                        .error(R.drawable.icon_app)\r\n                        .into(binding.storeDetailCover)\r\n                }\r\n\r\n                // 텍스트와 겹치는 사진을 약간 어둡게 처리\r\n                binding.storeDetailCover.setColorFilter(\r\n                    Color.parseColor(\"#BDBDBD\"),\r\n                    PorterDuff.Mode.MULTIPLY\r\n                )\r\n\r\n                // 이미지 제외한 모든 정보 입력\r\n                bookStoreInfo.let {\r\n                    binding.storeDetailStoreName.text = it.storeName\r\n                    isBookMarked = it.isBookMark\r\n                    if (isBookMarked == 1) {\r\n                        binding.storeDetailBookmarkFilled.visibility = View.VISIBLE\r\n                        binding.storeDetailBookmarkEmpty.visibility = View.INVISIBLE\r\n                    } else {\r\n                        binding.storeDetailBookmarkFilled.visibility = View.INVISIBLE\r\n                        binding.storeDetailBookmarkEmpty.visibility = View.VISIBLE\r\n                    }\r\n                    binding.storeDetailLocationTxt.text = it.location\r\n                    binding.storeDetailWebAddress.text = it.siteAddress\r\n                    binding.storeDetailPhoneTxt.text = it.phoneNumber\r\n                    binding.storeDetailInfo.text = it.storeInfo\r\n                }\r\n            }\r\n            else -> Log.d(\r\n                \"로그\", \"서점 상세 조회 실패, code: ${response.code} , \" +\r\n                        \"message: ${response.message}\"\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    // 북마크 수정 API 콜백\r\n\r\n    override fun onGetBookStoreFailure(message: String) {\r\n        Log.d(\"로그\", \"onGetBookStoreFailure() called, message: $message\")\r\n        dismissLoadingDialog()\r\n\r\n        showCustomToast(\"네트워크 확인 후 다시 시도해주세요.\")\r\n    }\r\n\r\n\r\n    override fun onPatchBookmarkSuccess(response: BaseResponse) {\r\n        Log.d(\"로그\", \"onPatchBookmarkSuccess() called, response: $response\")\r\n        dismissLoadingDialog()\r\n\r\n        when(response.code){\r\n            in 1000..1001 -> {\r\n                isBookMarked = 1\r\n                binding.storeDetailBookmarkFilled.visibility = View.VISIBLE\r\n            }\r\n            1002 -> {\r\n                isBookMarked = 0\r\n                binding.storeDetailBookmarkFilled.visibility = View.GONE\r\n            }\r\n            else -> Log.d(\"로그\", \"북마크 수정 실패, message: ${response.message}\")\r\n        }\r\n    }\r\n\r\n    override fun onPatchBookmarkFailure(message: String) {\r\n        Log.d(\"로그\", \"onPatchBookmarkFailure() called, message: $message\")\r\n        dismissLoadingDialog()\r\n\r\n        showCustomToast(\"네트워크 확인 후 다시 시도해주세요.\")\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n    private fun showCustomToast(message: String) {\r\n        Toast.makeText(activity, message, Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun showLoadingDialog(context: Context) {\r\n        mLoadingDialog = LoadingDialog(context)\r\n        mLoadingDialog.show()\r\n    }\r\n\r\n    private fun dismissLoadingDialog() {\r\n        if (mLoadingDialog.isShowing) {\r\n            mLoadingDialog.dismiss()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragment.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/menu/store_detail/StoreDetailFragment.kt	(date 1615978632060)
@@ -16,8 +16,7 @@
 import com.example.binding.config.ApplicationClass
 import com.example.binding.config.BaseResponse
 import com.example.binding.databinding.FragmentStoreDetailBinding
-import com.example.binding.src.main.menu.store_detail.models.BookStoreImages
-import com.example.binding.src.main.menu.store_detail.models.GetBookStoreResponse
+import com.example.binding.src.main.menu.store_detail.models.GetNewestResponse
 import com.example.binding.util.LoadingDialog
 
 
@@ -96,7 +95,7 @@
         }
     }
 
-    override fun onGetBookStoreSuccess(response: GetBookStoreResponse) {
+    override fun onGetBookStoreSuccess(response: GetNewestResponse) {
         Log.d("로그", "onGetBookStoreSuccess() called, response: $response")
         dismissLoadingDialog()
 
Index: app/src/main/java/com/example/binding/src/main/home/HomeRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.binding.src.main.home\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.binding.R\r\nimport com.example.binding.src.main.home.models.GetBooksResponse\r\n\r\nclass HomeRecyclerViewAdapter(private val itemList: ArrayList<GetBooksResponse>): RecyclerView.Adapter<HomeRecyclerViewAdapter.HomeViewHolder>() {\r\n\r\n    override fun onCreateViewHolder(\r\n        parent: ViewGroup,\r\n        viewType: Int\r\n    ): HomeRecyclerViewAdapter.HomeViewHolder {\r\n        val viewHolder = HomeViewHolder(LayoutInflater.from(parent.context)\r\n                .inflate(R.layout.item_menu, parent, false)\r\n        )\r\n        return viewHolder\r\n    }\r\n\r\n\r\n    override fun getItemCount() = itemList.size\r\n\r\n    override fun onBindViewHolder(holder: HomeRecyclerViewAdapter.HomeViewHolder, position: Int) {\r\n        holder.bindValue()\r\n    }\r\n\r\n    inner class HomeViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        // private val view: View = lodgeView.recycler_show_lodge_root\r\n\r\n        fun bindValue(){}\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/binding/src/main/home/HomeRecyclerViewAdapter.kt	(revision da4128ad8d541c35660d84e629757d46ce1e7f7b)
+++ app/src/main/java/com/example/binding/src/main/home/HomeRecyclerViewAdapter.kt	(date 1615978918979)
@@ -5,7 +5,6 @@
 import android.view.ViewGroup
 import androidx.recyclerview.widget.RecyclerView
 import com.example.binding.R
-import com.example.binding.src.main.home.models.GetBooksResponse
 
 class HomeRecyclerViewAdapter(private val itemList: ArrayList<GetBooksResponse>): RecyclerView.Adapter<HomeRecyclerViewAdapter.HomeViewHolder>() {
 
